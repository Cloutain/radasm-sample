;1.
;===========================================================
;ÔÚ±£»¤Ä£Ê½ÏÂ32Î»CPUÈÔÈ»¿ÉÒÔÓÃ20Î»µØÖ·À´ÊµÏÖ32Î»µØÖ·ÏßÑ°Ö·
;16Î»CPU: 16Î»¶Î¼Ä´æÆ÷+16Î»Æ«ÒÆµØÖ· (¾­µØÖ·¼Ó·¨Æ÷) -> 20Î»ÎïÀíÄÚ´æµØÖ·
;32Î»CPU: 32Î»µØÖ·µÄÄÚ´æ¶ÎĞÅÏ¢´æÈëÔÚÒ»ÕÅÄÚ´æ±íÖĞ£¬Ö»Ğè½«±íµÄË÷Òı´æÈë16¼Ä´æÆ÷µ±ÖĞ¼´¿É
;±£´æ±íÖĞË÷ÒıµÄ¶Î¼Ä´æÆ÷³ÆÎª£º¶ÎÑ¡Ôñ×Ó
;±íÖĞÃ¿¸ö±íÊ¾32Î»ÄÚ´æ¶ÎĞÅÏ¢³ÆÎª£º¶ÎÃèÊö·û£¨±£´æÁË¶ÎµÄµØÖ·ºÍ¶ÎµÄ³¤¶È£©¡£	
;ÕûÕÅ±í³ÆÎª£º¶ÎÃèÊö·û±í
;¶ÎÑ¡Ôñ×Ó16Î»£¬ÆäÖĞ¸ß13Î»ÓÃÀ´±íÊ¾ÃèÊö·û±íÖĞµÄË÷Òı£¬ÆäµÍ3Î»ÓÃ±íÊ¾¶ÎÃèÊö·ûÖĞËùÖ¸ÏòµÄ¶ÎÃèÊö·ûµÄÊôĞÔ
;


;Æô¶¯³ÌĞòÔÚÆÁÄ»ÖĞÑë´òÓ¡Ò»ĞĞ×Ö·û´®
[BITS 16]
org 07c00h	;Ö¸Ã÷³ÌĞò¿ªÊ¼µØÖ·ÊÇ07c00h,¶ø²»ÊÇÔ­À´ µÄ00000
;int »ã±àÖ¸Áî	int 10h
jmp main

gdt_table_start:	;¸æËß±àÒëÆ÷¶ÎÃèÊö·û¿ªÊ¼
	;Intel¹æ¶¨ÃèÊö·û±íµÄµÚÒ»¸öÃèÊö·û±ØĞëÊÇ¿ÕÃèÊö·û
	gdt_null:
		dd 0h
		dd 0h	;Intel¹æ¶¨¶ÎÃèÊö·û±íµÄµÚÒ»¸ö±íÏî±ØĞëÎª0
	gdt_data_addr	equ	$-gdt_table_start	;Êı¾İ¶ÎµÄ¿ªÊ¼Î»ÖÃ
	gdt_data£º	;Êı¾İ¶ÎÃèÊö·û
		dw 07ffh ;¶Î½çÏŞ
		dw 0h	;¶Î»ùµØÖ·18Î»
		db 10010010b	;¶ÎÃèÊö·ûµÄµÚÁù¸ö×Ö½ÚÊôĞÔ£¨Êı¾İ¶Î£©
		db 1100000b	;¶ÎÃèÊö·ûµÄµÚÆß¸ö×Ö½ÚÊôĞÔ
		db 0	;¶ÎÃèÊö·ûµÄ×îºóÒ»¸ö×Ö½ÚÒ²¾ÍÊÇ¶Î»ùµØÖ·
	
	gdt_video_addr equ $-gdt_table_start
	gdt_video:	;ÓÃÀ´ÃèÊöÏÔ´æµØÖ·¿Õ¼äµÄ¶ÎÃèÊö·û
		dw	0FFH	;ÏÔ´æ¶Î½çÏŞ¾ÍÊÇ1M
		dw	8000H
		db	0BH
		db	10010010b
		db	11000000b
		db	0
	
	gdt_code_addr	equ	$-gdt_table_start	;´úÂë¶ÎµÄ¿ªÊ¼Î»ÖÃ
	gdt_code:
		dw 07ff	;¶Î½çÏŞ
		dw 1h	;¶Î»ùµØÖ·0~18Î»
		db 80h	;¶Î»ùµØÖ·19~23Î»
		db 10011010b	;¶ÎÃèÊö·ûµÄµÚÁù¸ö×Ö½Ú£¨´úÂë¶Î£©
		db 11000000b	;¶ÎÃèÊö·ûµÄµÚÆß¸ö×Ö½Ú
		db 0			;¶Î»ùµØÖ·µÄµÚ¶ş²¿·Ö
gdt_table_end:
		
		
;Í¨¹ılgdtÖ¸Áî¿ÉÒÔ°ÑGDTRÃèÊö±íµÄ´óĞ¡ºÍÆğÊ¼µØÖ·´æÈëgdtr¼Ä´æÆ÷ÖĞ
gdtr_addr:
	dw gdt_table_end-gdt_table_start-1	;¶ÎÃèÊö±í³¤¶È
	dd gdt_table_start	;¶ÎÃèÊö±í»ùµØÖ·
;lgdt [gdtr_addr]	;ÈÃCPU¶ÁÈ¡gdtr_addrËùÖ¸ÏòÄÚ´æÄÚÈİ±£´æµ½gdtr¼Ä´æÆ÷µ±ÖĞ
;A20µØÖ·Ïß£¬ÇĞ»»µ½±£»¤Ä£Ê½Ê±£¬A20µØÖ·Ïß±ØĞë¿ªÆô¡£µØÖ·»ØÈÆ×÷ÓÃ£¬·ÅÆú32Î»CPUµØÖ·ÏßµÄ¸ß12Î»¡££
;¶Ë¿ÚµÄ¶ÁĞ´²Ù×÷£º
	;in	 accume port	;½«¶Ë¿ÚµÄÄÚÈİ¶Áµ½¼Ä´æÆ÷AL»òAXµ±ÖĞ£¬ÆäÖĞaccumeÖ»ÄÜÊÇAL»òAX¡£
	;out port accume	;½«accumeÖĞµÄÄÚÈİĞ´µ½¶Ë¿ÚÖĞ£¬ÕâÀïaccume¿ÉÒÔÊÇÆäËü¼Ä´æÆ÷
	
;¿ªÆôA20µØÖ·Ïß
main:
	;ĞŞ¸ÄÊı¾İ¶ÎÃèÊö¸ú¶Î»ùµØÖ·ÓĞ¹ØµÄ×Ö½Ú£¬³õÊ¼»¯Êı¾İ¶ÎÃèÊö·ûµÄ»ùµØÖ·
	xor eax,eax	;Çå¿Õeax
	add eax,data_32	;½«32Î»µØÖ·ĞÅÏ¢¿½±´µ½eaxÖĞ
	mov word [gdt_data+2],ax	;°ÑaxÖĞµÄÄÚÈİ¿½±´µ½¶ÎÃèÊö·ûµÄµÚ3¡¢4Á½¸ö×Ö½Úµ±ÖĞ£¬ÒòÊÇwordÀàĞÍµÄ¿½±´»
	shr eax,16	;ÓÒÒÆ16Î»
	mov byte [gdt_data+4],al	;½«ÏÈÇ°eaxÖĞµÄµÚ5¸ö×Ö½ÚÒÆµ½¶ÎÃèÊö·ûµ±ÖĞ
	mov byte [gdt_data+7],ah	;½«ÏÈÇ°eaxÖĞµÄµÚ8¸ö×Ö½ÚÒÆµ½¶ÎÃèÊö·ûµ±ÖĞ
	
	;ĞŞ¸Ä´úÂë¶ÎÃèÊö¸ú¶Î»ùµØÖ·ÓĞ¹ØµÄ×Ö½Ú£¬³õÊ¼»¯Êı¾İ¶ÎÃèÊö·ûµÄ»ùµØÖ·
	xor eax,eax
	add eax,code_32
	mov word [gdt_code+2]
	shr eax,16
	mov byte [gdt_code+4],al
	mov byte [gdt_code+7],ah
	
	;ÔÚ×ª·Å±£»¤Ä£Ê½Ö®Ç°£¬±ØĞë·Ï³ıÔ­À´µÄÖĞ¶ÏÏòÁ¿±í£¬ÓÃcliÖ¸Áî¿ÉÒÔ·Ï³ıÊµÄ£Ê½ÏÂµÄÖĞ¶ÏÏòÁ¿±í
	cli
	lgdt [gdtr_addr]	;ÈÃCPU¶ÁÈ¡gdtr_addrËùÖ¸ÏòÄÚ´æÄÚÈİ±£´æµ½gdtr¼Ä´æÆ÷µ±ÖĞ

	enable_a20:
		in al,92h	;Ö»ÒªÍù0x92ºÅ¶Ë¿ÚÖĞĞ´ÈëĞÅÏ¢¾Í¿ÉÒÔ¿ªÆôA20µØÖ·Ïß
		or al,00000010b	;00000010±íÊ¾¿ªÆôA20µØÖ·ÏßµÄÊı¾İ
		out 92h,al		;°ÑÉèÖÃºÃµÄÊı¾İĞ´½ø0x92ºÅ¶Ë¿Úµ±ÖĞ
	
;×ªÈë±£»¤Ä£Ê½,Ö»Òª½«CR0¼Ä´æÆ÷µÄµÚ1Î»(PEÎ»)ÖÃÎª1¼´¿É
;80386Ìá¹©ÁË4¸ö32Î»µÄ¿ØÖÆ¼Ä´æÆ÷CR0~CR3£¬ÆäÖĞCR0ÖĞµÄÄ³Ğ©Î»ÊÇÓÃÀ´±êÖ¾ÊÇ·ñÒª½øÈë±£»¤Ä£Ê½
;CR1¼Ä´æÆ÷±£ÁôÃ»ÓĞ±»Ê¹ÓÃ
;CR2ºÍCR3ÓÃÓÚ·ÖÒ³»úÖÆ
;CR0µÄPEÎ»¿ØÖÆ·Ö¶Î¹ÜÀí»úÖÆ£¬PE=0,CPUÔËĞĞÓÚÊµÄ£Ê½£»PE=1,CPUÔËĞĞÓÚ±£»¤Ä£Ê½
;CR0µÄPGÎ»¿ØÖÆ·Ö¶Î¹ÜÀí»ú,PG=0£¬½ûÖ¹·ÖÒ³¹ÜÀí»úÖÆ;PG=1£¬ÆôÓÃ·ÖÒ³¹ÜÀí»úÖÆ¡£
	mov eax,cr0
	or eax,1	;ÓÃÓÚ°ÑCR0¼Ä´æÆ÷µÄµÚ1ÖÃÎª1
	mov cr0,eax	;°ÑCR0¼Ä´æÆ÷µÄµÚ1ÖÃÎª1
;Ìø×ªµ½±£»¤Ä£Ê½ÖĞ
	jmp gdt_code_addr:0
	
;ÔÚ±£»¤Ä£Ê½ÏÂ±à³Ì(ÔÚÆÁÄ»ÖĞÑë´òÓ¡hello world)
[BITS 32]
	data_32:
		db	"hello world"
	code_32:
		MOV ax,gdt_data_addr
		mov ds,ax
		mov ax,gdt_video_addr
		mov gs,ax
		mov cx,11
		mov edi,(80*10+12)*2	;ÔÚÆÁÄ»ÖĞÑëÏÔÊ¾
		mov bx,0
		mov ah,0ch
		s:mov al,[ds:bx]
		mov [gs:edi]
		mov [gs:edi+1],ah
		inc bx
		add edi,2
		loop s
		jmp $	;ËÀÑ­»·
		times 510-($-$$)	db 0
		dw 0aa55h
	
	
	
	
;ok !  ^_^  
;1.Æô¶¯ĞéÄâ»ú£¬ÓÃnasm boot.asm -o boot.bin ±àÒë	
;2.°Ñ³ÌĞòĞ´µ½ÈíÅÌ¾µÏñÀïÈ¥£¬ÓÃ±àÒëºÃµÄĞ´ÈëÎÄ¼ş³ÌĞòĞ´Èë: ./write_image boot.bin boot.img
;3.½«boot.img¸´ÖÆµ½×Ô¼ºÔÚBochs-2.4.6Ä¿Â¼ÏÂ½¨µÄÎÄ¼ş¼ĞÏÂ£¬²¢ĞŞ¸Ärun.bat
;-----------------------------------------------
;ÆäÖĞwrite_image.c,¿ÉÒÔÔÚrad hatµÄvi±à¼­Æ÷ÕâÑùĞ´£º´
#include<stdio.h>
#include<fcnt.h>
#include<sys/types.h>
#include<sys/stat.h>

int main(int argc,char *argv[])
{
	int fd_source;
	int fd_dest;
	int read_count=0;
	char buffer[512]={0};
	fd_source=open("boot.bin",O_RDONLY);
	IF(fd_source<0)
	{
		perror("open boot.bin error");
		return 0;
	}
	fd_dest=open("virtual_floppy.vfd",O_WRONLY);
	while ((read_count=read(fd_source,buffer,512))>0)
	{
	write(fd_dest,buffer,read_count);
	memset(buffer,0,512);
	}
	printf("wrinte image OK !");
	return 0;
}
;±£´æ³Éwrite_image.c£¬È»ºó±àÒë£ºgcc write_image.c -o write_image
;ÓÃĞéÄâÈíÅÌÖÆ×÷¹¤¾ß£¬ÖÆ×÷Ò»¸öĞéÄâÈíÅÌ£¨È¡Ãûboot.img£©£¬×îºóÔÙÓÃËü½«Òıµ¼³ÌĞòĞ´Èëboot.img
;  ^_^    ok!
;Æô¶¯³ÌĞòÓĞÎÊÌâµÄ»°£¬¿ÉÒÔÓÃbocshĞéÄâ»ú¶Ô²Ù×÷ÏµÍ³½øĞĞµ÷ÊÔ¡£
;===================================================
;bocshµÄµ÷ÊÔ¹¦ÄÜbocshdbg
;	continue(c) ³ÌĞò¼ÌĞøÔËĞĞÖ±µ½Óöµ½¶ÏµãÎªÖ¹
;	step(s)	Òô²½¸ú×Ù
;	vbreak(vb)	ÔÚĞéÄâµØÖ·ÉÏÉèÖÃÒ»¸ö¶Ïµã
;	pbreak(b)	ÔÚÎïÀíµØÖ·ÉÏÉèÖÃÒ»¸ö¶Ïµã
;	lbreak(lb)	ÔÚÏßĞÔµØÖ·ÉÏÉèÖÃÒ»¸ö¶Ïµã
;	disassemble	·´»ã±àÖ¸Áî
;================================================================
;================================================================

;2.	Ò»¸öÔÚÆÁÄ»ÖĞÑëÏÔÊ¾Ò»ĞĞ×Ö·û´®µÄÒıµ¼³Ì(ÊµÄ£Ê½ÏÂĞ´)
;Æô¶¯³ÌĞòÔÚÆÁÄ»ÖĞÑë´òÓ¡Ò»ĞĞ×Ö·û´®

org 07c00h	;Ö¸Ã÷³ÌĞò¿ªÊ¼µØÖ·ÊÇ07c00h,¶ø²»ÊÇÔ­À´ µÄ00000
;int »ã±àÖ¸Áî	int 10h
	mov ax,cs
	mov es,ax
	mov bp,msgstr	;es:bpÖ¸ÏòµÄÄÚÈİ¾ÍÊÇÎÒÃÇÒªÏÔÊ¾µÄ×Ö·û´®µØÖ·?
	
	mov cx,12	;×Ö·û´®³¤¶È
	mov dh,12	;ÏÔÊ¾ÆğÊ¼ĞĞºÅ
	mov dl,36	;ÏÔÊ¾µÄÁĞºÅ
	mov bh,0	;ÏÔÊ¾µÄÒ³Êı£¬ÔÚµÚ0Ò³ÏÔÊ¾
	mov al,1	;´®½á¹¹
	mov bl,0c	;ºÚµ×ºì×Ö
	
	msgstr: db "hello my os"
	int 10h		;BIOSÖĞ¶Ï
	times 510-($-$$) db 0 ;ÖØ¸´N´ÎÃ¿´ÎÌî³äÖµÎª0
	;ÒòÎªBIOSµÄµÚÒ»¸öÉÈÇøÊÇ512×Ö½Ú£¬µ±×îºóÁ½×Ö½ÚÊÇ55AAÊ±£¬Ëü¾ÍÊÇÒıµ¼³ÌĞò?
	dw 55aaH
	jmp $	;ÎªÁË²»ÈÃ³ÌĞò½áÊø£¬ÉèÖÃÒ»¸öËÀÑ­»·£¬²»¶ÏÌø×ªµ½µ±Ç°Î»ÖÃ?
	
;ÔÚLinux²Ù×÷ÏµÍ³ÏÂ£¬ÓÃnasm ½øĞĞ±àÒë£¬ÃüÁî£º# nasm boot.asm -o boot.bin
;ÓÃ ndisasm boot.bin ¿ÉÒÔ½øĞĞ·´±àÒë

